name: team3-have-lunch

on:
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:


jobs:
  build-and-run-test:
    runs-on: "ubuntu-latest"
    name: "CI backend"
    defaults:
      run:
        working-directory: './backend/'

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: cleanup
        run: dotnet clean HaveLunch.sln

      - name: restore dependencies
        run: dotnet restore HaveLunch.sln

      - name: build
        run: dotnet build

      - name: test
        run: dotnet test HaveLunch.Tests/HaveLunch.Tests.csproj

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Login to Amazon ECR"
        uses: aws-actions/amazon-ecr-login@v2

      - name: "Publish Docker Image"
        run: dotnet publish HaveLunch/HaveLunch.csproj --configuration Release /t:PublishContainer

      - name: "Tag Image with Remote Registry as prefix"
        run: docker tag ci-gurukul-team3-harshit-nikhil-have-lunch:latest ${{ secrets.AWS_ECR_HOSTNAME }}/ci-gurukul-team3-harshit-nikhil-have-lunch:${{ github.sha }}

      - name: "Push to Remote Registry"
        run: docker push ${{ secrets.AWS_ECR_HOSTNAME }}/ci-gurukul-team3-harshit-nikhil-have-lunch:${{ github.sha }}


  run-bdd:
    runs-on: "ubuntu-latest"
    name: "Frontend Build"
    needs: build-and-run-test
    steps:
      - name: "Checkout branch"
        uses: actions/checkout@v4

      - name: "Setup Node"
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.1"

      - name: "Install Dependencies"
        run: |
          cd frontend
          npm ci
        env:
          VITE_HOST_URL: ${{ secrets.VITE_HOST_URL }}
          VITE_HOST_PORT: ${{ secrets.VITE_HOST_PORT }}
          PROD: "true"

      - name: "Setup Chrome"
        uses: browser-actions/setup-chrome@v1

      - name: "Run Tests"
        run: |
          cd frontend
          # npm run dev & 
          # npm test
        env:
          VITE_HOST_URL: ${{ secrets.VITE_HOST_URL }}
          VITE_HOST_PORT: ${{ secrets.VITE_HOST_PORT }}
          PROD: "true"

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Login to Amazon ECR"
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: upload to ECR
        run: docker build ../../frontend 

      - name: "Tag Image with Remote Registry as prefix"
        run: docker tag ci-gurukul-team3-harshit-nikhil-have-lunch-frontend:latest ${{ secrets.AWS_ECR_HOSTNAME_FRONTEND }}/ci-gurukul-team3-harshit-nikhil-have-lunch-frontend:${{ github.sha }}

      - name: "Push to Remote Registry"
        run: docker push ${{ secrets.AWS_ECR_HOSTNAME_FRONTEND }}/ci-gurukul-team3-harshit-nikhil-have-lunch-frontend:${{ github.sha }}
